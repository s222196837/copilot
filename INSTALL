RUNTIME

# apt-get install \
	pcp \
	pijuice-base \
	qtpositioning5 \
	qtlocation5 \
	libqt5quick5 \	
	libqt5qmlmodels5 \
	libqt5qml5 \
	libqt5network5 \
	libqt5svg5 \
	libqt5virtualkeyboard5 \
	libqt5widgets5 \

COMPILE

# apt-get install \
	libi2c-dev \
	libpcp3-dev \
	libpcp-mmv1-dev \
	libeigen3-dev \
	libqt5svg5-dev \
	libqt5quick5-dev \
	libqt5qmlmodels5-dev \
	libqt5qml5-dev \
	libqt5network5 \
	libqt5svg5-dev \
	libqt5widgets5-dev \
	qml-module-qtquick-controls2 \
	qml-module-qtquick-virtualkeyboard \
	qtlocation5-dev	\
	qtpositioning5-dev \
	qt5-qmake

VIRTUAL KEYBOARD

There is a problem with some RPi Qt package builds for Debian
relating to the virtual keyboard.
If you encounter these error messages when starting 'copilot',
try the recipe below.

	"qrc:/main.qml: Type InputPanel unavailable"
	"qrc:/.../InputPanel.qml: Type Keyboard unavailable"

# apt-get update
# apt install git build-essential
# apt-get install qtdeclarative5-dev libqt5svg5-dev qtbase5-private-dev qml-module-qtquick-controls2 qml-module-qtquick-controls qml-module-qt-labs-folderlistmodel
# apt-get install '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev
> git clone -b 5.15 https://github.com/qt/qtvirtualkeyboard.git
> cd qtvirtualkeyboard
> qmake 
> make
# make install


RASPBERRY PI SETUP

GPS uses the built in UART on the RX/TX pins, and the Altimu-10
uses I2C for serial communication.  Setup the following:

# raspi-config

> Interfacing Options
	> I2C
		> YES (to enabling SPI interface)
		"The SPI interface is enabled.
	> Serial
		> NO (to enabling login shell)
		> YES (to enabling serial port)
		"The serial login shell is disabled.
		 The serial interface is enabled"
	> Finish

# reboot

I2C is now available via /dev/i2c-1	[ALTIMU-10]
UART is now available via /dev/ttyS0	[GPS]


ALTIMU-10 SETUP

> git clone https://github.com/natoscott/altimu10-ahrs
> make
# make install

Once hardware is ready, run

> minimu9-ahrs-calibrate

Then verify

> ./copilot-altimu10


METRICS SETUP

# chmod o+w,+t /var/lib/pcp/tmp/mmv

When ./copilot program is running live metrics will be available
via PCP tools, eg.

> pmie -e -v mmv.copilot.altimu10.count


GPS SETUP
BUZZER SETUP
BATTERY SETUP

No special setup required for these components, to test:

> ./copilot-gps
> ./copilot-buzzer 1 1
> ./copilot-battery

