#!/usr/bin/env python
# Portions of this file Copyright 2010 by the GPSD project
# SPDX-License-Identifier: BSD-2-clause

import os
import select
import socket
import string
import sys
import termios
try:
    from gps.misc import BINARY_ENCODING
except ImportError as e:
    sys.stderr.write("copilot-gps: ERROR: can't load Python gps library.\n")
    sys.stderr.write("%s\n" % e)
    sys.exit(1)

SERIAL_DEV = '/dev/ttyS0'  # Raspberry PI serial port
NMEA_MAX = 96 # 82 per the spec, but provide a buffer


def hexdump(st):
    """Convert string to hex string."""
    dmp = ""
    for ch in bytearray(st):  # bytearray gets array of ints in Python 2 and 3
        if ch in set(bytearray(string.printable, encoding=BINARY_ENCODING)):
            dmp += chr(ch)
        else:
            dmp += "\\x%02x" % ch
    return dmp

if __name__ == '__main__':
    try:

        tty = os.open(SERIAL_DEV, os.O_RDWR)
        seqno = 0
        while True:
            rlist, _, _ = select.select([tty], [], [])
            if rlist == [tty]:
                buf = os.read(tty, NMEA_MAX)
                if not buf:
                    break
                sys.stdout.write(hexdump(buf))
                sys.stdout.flush()

    except KeyboardInterrupt:
        sys.stdout.write("\n")
        raise SystemExit(0)
